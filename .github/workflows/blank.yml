name: Create EC2 instance and install Minikube

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  INSTANCE_TYPE: t2.micro
  AMI_ID: ami-0c55b159cbfafe1f0
  KEY_NAME: my-aws-key
  SECURITY_GROUP_ID: sg-0123456789abcdef
  SCRIPT_NAME: install-minikube.sh

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: Create EC2 instance
        id: create-ec2
        uses: aws-actions/amazon-ec2-run-instances@v1
        with:
          image-id: ${{ env.AMI_ID }}
          instance-type: ${{ env.INSTANCE_TYPE }}
          key-name: ${{ env.KEY_NAME }}
          security-group-ids: ${{ env.SECURITY_GROUP_ID }}

      - name: Get instance ID
        run: echo "::set-output name=instance_id::$(echo ${{ steps.create-ec2.outputs.instance_id }})"

      - name: Wait for instance to be running
        uses: aws-actions/amazon-ec2-wait-for-instance-status@v1
        with:
          instance-id: ${{ steps.create-ec2.outputs.instance_id }}
          status: running

      - name: Get instance IP address
        id: get-ip
        run: |
          aws ec2 describe-instances --instance-ids ${{ steps.create-ec2.outputs.instance_id }} --query "Reservations[*].Instances[*].PublicIpAddress" --output=text
          echo "::set-output name=ip_address::$(cat ip_address.txt)"

      - name: Copy script to instance
        uses: appleboy/scp-action@master
        with:
          host: ${{ steps.get-ip.outputs.ip_address }}
          username: ubuntu
          key: ${{ secrets.AWS_PRIVATE_KEY }}
          source: ${{ env.SCRIPT_NAME }}
          target: .

      - name: Install Minikube on instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ steps.get-ip.outputs.ip_address }}
          username: ubuntu
          key: ${{ secrets.AWS_PRIVATE_KEY }}
          script: |
            chmod +x ${{ env.SCRIPT_NAME }}
            ./${{ env.SCRIPT_NAME }}
